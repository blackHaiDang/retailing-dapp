{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport Web3 from 'web3';\n\nvar _require = require('../build/contracts/Retailing.json'),\n    abi = _require.abi;\n\nvar contractAddress = '0xa24cc613Ecd1be73B474b12EEb9592388e8509b2';\nvar reciever = '0x57102EB7596D54cE2C139C7b047024286ca8Ba54';\n\nfunction connectWallet() {\n  return _connectWallet.apply(this, arguments);\n}\n\nfunction _connectWallet() {\n  _connectWallet = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (window.ethereum && window.ethereum.chainId == '0x61') {//      window.ethereum.request({ method: \"eth_requestAccounts\" });\n              //      window.web3 = new Web3(window.ethereum);\n              //      const account = web3.eth.accounts;\n              //      const walletAddress = account.givenProvider.selectedAddress;\n              //      console.log(`Wallet: ${walletAddress}`);\n              //      const contract = new web3.eth.Contract(abi,contractAddress);\n              //     console.log(`Contract: ${contract}`);\n              //  // const chainId = web3.utils.toHex(97);\n              //     const chainId = 97\n              //      console.log(`Chain ID: ${chainId}`);\n              //      console.log(`abi: ${abi}`);\n              //      contract.methods.paid(walletAddress, 11)\n              //      .send({\n              //            from: walletAddress,\n              //            gas: 0x00,\n              //            gasPrice: 0x00\n              //      }).then(receipt=> {console.log(receipt)})\n              //   if (typeof window.ethereum !== 'undefined') {\n              //     ethereum.request({ method: 'eth_requestAccounts' });\n              // } else {\n              //     alert('Please install metamask')\n              // };\n            }\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _connectWallet.apply(this, arguments);\n}\n\nexport default connectWallet;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/ecommerce-dapp/components/Metamask.js"],"names":["Web3","require","abi","contractAddress","reciever","connectWallet","window","ethereum","chainId"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,MAAjB;;eAQgBC,OAAO,CAAC,mCAAD,C;IAAfC,G,YAAAA,G;;AACR,IAAMC,eAAe,GAAG,4CAAxB;AACA,IAAMC,QAAQ,GAAG,4CAAjB;;SAIeC,a;;;;;4EAAf;AAAA;AAAA;AAAA;AAAA;AAEI,gBAAIC,MAAM,CAACC,QAAP,IAAmBD,MAAM,CAACC,QAAP,CAAgBC,OAAhB,IAA2B,MAAlD,EAA0D,CAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACC;;AA5BH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAsCA,eAAeH,aAAf","sourcesContent":["import Web3 from 'web3';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst { abi } = require('../build/contracts/Retailing.json');\r\nconst contractAddress = '0xa24cc613Ecd1be73B474b12EEb9592388e8509b2';\r\nconst reciever = '0x57102EB7596D54cE2C139C7b047024286ca8Ba54';\r\n\r\n\r\n\r\nasync function connectWallet() {\r\n\r\n    if (window.ethereum && window.ethereum.chainId == '0x61') {\r\n  //      window.ethereum.request({ method: \"eth_requestAccounts\" });\r\n  //      window.web3 = new Web3(window.ethereum);\r\n  //      const account = web3.eth.accounts;\r\n  //      const walletAddress = account.givenProvider.selectedAddress;\r\n  //      console.log(`Wallet: ${walletAddress}`);\r\n  //      const contract = new web3.eth.Contract(abi,contractAddress);\r\n  //     console.log(`Contract: ${contract}`);\r\n\r\n  //  // const chainId = web3.utils.toHex(97);\r\n  //     const chainId = 97\r\n\r\n  //      console.log(`Chain ID: ${chainId}`);\r\n  //      console.log(`abi: ${abi}`);\r\n  //      contract.methods.paid(walletAddress, 11)\r\n  //      .send({\r\n  //            from: walletAddress,\r\n  //            gas: 0x00,\r\n  //            gasPrice: 0x00\r\n  //      }).then(receipt=> {console.log(receipt)})\r\n       \r\n  //   if (typeof window.ethereum !== 'undefined') {\r\n  //     ethereum.request({ method: 'eth_requestAccounts' });\r\n  // } else {\r\n  //     alert('Please install metamask')\r\n  // };\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n  \r\n\r\n\r\nexport default connectWallet"]},"metadata":{},"sourceType":"module"}