{"ast":null,"code":"import Web3 from 'web3';\n\nconst {\n  abi\n} = require('../build/contracts/Retailing.json');\n\nconst toAddress = '0x57102EB7596D54cE2C139C7b047024286ca8Ba54';\nconst tokenContractAddress = '0xa24cc613Ecd1be73B474b12EEb9592388e8509b2';\n\nasync function connectWallet() {\n  if (window.ethereum && window.ethereum.chainId == '0x61') {\n    //      window.ethereum.request({ method: \"eth_requestAccounts\" });\n    //      window.web3 = new Web3(window.ethereum);\n    //      const account = web3.eth.accounts;\n    //      const fromAddress = account.givenProvider.selectedAddress;\n    //      console.log(`Wallet: ${fromAddress}`);\n    //      const contract = new web3.eth.Contract(abi,contractAddress);\n    //     console.log(`Contract: ${contract}`);\n    //  // const chainId = web3.utils.toHex(97);\n    //     const chainId = 97\n    //      console.log(`Chain ID: ${chainId}`);\n    //      console.log(`abi: ${abi}`);\n    //      contract.methods.paid(fromAddress, 11)\n    //      .send({\n    //            from: fromAddress,\n    //            gas: 0x00,\n    //            gasPrice: 0x00\n    //      }).then(receipt=> {console.log(receipt)})\n    //   if (typeof window.ethereum !== 'undefined') {\n    //     ethereum.request({ method: 'eth_requestAccounts' });\n    // } else {\n    //     alert('Please install metamask')\n    // };\n    const fromAddress = account.givenProvider.selectedAddress; // Get ERC20 Token contract instance\n\n    let contract = new web3.eth.Contract(abi, tokenAddress); // calculate ERC20 token amount\n\n    let value = amount.mul(web3.utils.toBN(10).pow(decimals)); // call transfer function\n\n    contract.methods.transfer(toAddress, value).send({\n      from: fromAddress\n    }).on('transactionHash', function (hash) {\n      console.log(hash);\n    });\n  }\n}\n\nexport default connectWallet;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/ecommerce-dapp/components/Metamask.js"],"names":["Web3","abi","require","toAddress","tokenContractAddress","connectWallet","window","ethereum","chainId","fromAddress","account","givenProvider","selectedAddress","contract","web3","eth","Contract","tokenAddress","value","amount","mul","utils","toBN","pow","decimals","methods","transfer","send","from","on","hash","console","log"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;;AAQA,MAAM;AAAEC,EAAAA;AAAF,IAAUC,OAAO,CAAC,mCAAD,CAAvB;;AACA,MAAMC,SAAS,GAAG,4CAAlB;AACA,MAAMC,oBAAoB,GAAG,4CAA7B;;AAGA,eAAeC,aAAf,GAA+B;AAE3B,MAAIC,MAAM,CAACC,QAAP,IAAmBD,MAAM,CAACC,QAAP,CAAgBC,OAAhB,IAA2B,MAAlD,EAA0D;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA,UAAMC,WAAW,GAAGC,OAAO,CAACC,aAAR,CAAsBC,eAA1C,CA1B4D,CA2B5D;;AACF,QAAIC,QAAQ,GAAG,IAAIC,IAAI,CAACC,GAAL,CAASC,QAAb,CAAsBf,GAAtB,EAA2BgB,YAA3B,CAAf,CA5B8D,CA6B9D;;AACA,QAAIC,KAAK,GAAGC,MAAM,CAACC,GAAP,CAAWN,IAAI,CAACO,KAAL,CAAWC,IAAX,CAAgB,EAAhB,EAAoBC,GAApB,CAAwBC,QAAxB,CAAX,CAAZ,CA9B8D,CA+B9D;;AACAX,IAAAA,QAAQ,CAACY,OAAT,CAAiBC,QAAjB,CAA0BvB,SAA1B,EAAqCe,KAArC,EAA4CS,IAA5C,CAAiD;AAACC,MAAAA,IAAI,EAAEnB;AAAP,KAAjD,EACCoB,EADD,CACI,iBADJ,EACuB,UAASC,IAAT,EAAc;AACnCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,KAHD;AAKG;AAEF;;AAQD,eAAezB,aAAf","sourcesContent":["import Web3 from 'web3';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst { abi } = require('../build/contracts/Retailing.json');\r\nconst toAddress = '0x57102EB7596D54cE2C139C7b047024286ca8Ba54';\r\nconst tokenContractAddress = '0xa24cc613Ecd1be73B474b12EEb9592388e8509b2'\r\n\r\n\r\nasync function connectWallet() {\r\n\r\n    if (window.ethereum && window.ethereum.chainId == '0x61') {\r\n  //      window.ethereum.request({ method: \"eth_requestAccounts\" });\r\n  //      window.web3 = new Web3(window.ethereum);\r\n  //      const account = web3.eth.accounts;\r\n  //      const fromAddress = account.givenProvider.selectedAddress;\r\n  //      console.log(`Wallet: ${fromAddress}`);\r\n  //      const contract = new web3.eth.Contract(abi,contractAddress);\r\n  //     console.log(`Contract: ${contract}`);\r\n\r\n  //  // const chainId = web3.utils.toHex(97);\r\n  //     const chainId = 97\r\n\r\n  //      console.log(`Chain ID: ${chainId}`);\r\n  //      console.log(`abi: ${abi}`);\r\n  //      contract.methods.paid(fromAddress, 11)\r\n  //      .send({\r\n  //            from: fromAddress,\r\n  //            gas: 0x00,\r\n  //            gasPrice: 0x00\r\n  //      }).then(receipt=> {console.log(receipt)})\r\n       \r\n  //   if (typeof window.ethereum !== 'undefined') {\r\n  //     ethereum.request({ method: 'eth_requestAccounts' });\r\n  // } else {\r\n  //     alert('Please install metamask')\r\n  // };\r\n  const fromAddress = account.givenProvider.selectedAddress;\r\n  // Get ERC20 Token contract instance\r\nlet contract = new web3.eth.Contract(abi, tokenAddress);\r\n// calculate ERC20 token amount\r\nlet value = amount.mul(web3.utils.toBN(10).pow(decimals));\r\n// call transfer function\r\ncontract.methods.transfer(toAddress, value).send({from: fromAddress})\r\n.on('transactionHash', function(hash){\r\n  console.log(hash);\r\n});\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n  \r\n\r\n\r\nexport default connectWallet"]},"metadata":{},"sourceType":"module"}