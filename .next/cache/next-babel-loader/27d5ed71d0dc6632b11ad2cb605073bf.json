{"ast":null,"code":"import Web3 from 'web3';\nimport { calculateTotal } from '../context/mainContext';\n\nconst {\n  abi\n} = require('../build/contracts/Retailing.json');\n\nconst contractAddress = '0xa24cc613Ecd1be73B474b12EEb9592388e8509b2';\nconst reciever = '0x57102EB7596D54cE2C139C7b047024286ca8Ba54';\n\nasync function connectWallet() {\n  if (window.ethereum && window.ethereum.chainId == '0x61') {\n    window.ethereum.request({\n      method: \"eth_requestAccounts\"\n    });\n    window.web3 = new Web3(window.ethereum);\n    const account = web3.eth.accounts;\n    const walletAddress = account.givenProvider.selectedAddress;\n    console.log(`Wallet: ${walletAddress}`);\n    const contract = new web3.eth.Contract(abi, contractAddress);\n    console.log(`Contract: ${contract}`);\n    const chainId = web3.utils.toHex(97);\n    console.log(`Chain ID: ${chainId}`);\n    console.log(`abi: ${abi}`);\n    contract.methods.paid(walletAddress).send({\n      from: walletAddress,\n      gas: 0x00,\n      gasPrice: 0x00\n    }).then(receipt => {\n      console.log(receipt);\n    });\n\n    if (typeof window.ethereum !== 'undefined') {\n      ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n    } else {\n      alert('Please install metamask');\n    }\n\n    ;\n  }\n}\n\nexport default connectWallet;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/ecommerce-dapp/components/Metamask.js"],"names":["Web3","calculateTotal","abi","require","contractAddress","reciever","connectWallet","window","ethereum","chainId","request","method","web3","account","eth","accounts","walletAddress","givenProvider","selectedAddress","console","log","contract","Contract","utils","toHex","methods","paid","send","from","gas","gasPrice","then","receipt","alert"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,SAASC,cAAT,QAA+B,wBAA/B;;AAOA,MAAM;AAAEC,EAAAA;AAAF,IAAUC,OAAO,CAAC,mCAAD,CAAvB;;AACA,MAAMC,eAAe,GAAG,4CAAxB;AACA,MAAMC,QAAQ,GAAG,4CAAjB;;AAIA,eAAeC,aAAf,GAA+B;AAE3B,MAAIC,MAAM,CAACC,QAAP,IAAmBD,MAAM,CAACC,QAAP,CAAgBC,OAAhB,IAA2B,MAAlD,EAA0D;AACvDF,IAAAA,MAAM,CAACC,QAAP,CAAgBE,OAAhB,CAAwB;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAxB;AACAJ,IAAAA,MAAM,CAACK,IAAP,GAAc,IAAIZ,IAAJ,CAASO,MAAM,CAACC,QAAhB,CAAd;AACA,UAAMK,OAAO,GAAGD,IAAI,CAACE,GAAL,CAASC,QAAzB;AACA,UAAMC,aAAa,GAAGH,OAAO,CAACI,aAAR,CAAsBC,eAA5C;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAa,WAAUJ,aAAc,EAArC;AACA,UAAMK,QAAQ,GAAG,IAAIT,IAAI,CAACE,GAAL,CAASQ,QAAb,CAAsBpB,GAAtB,EAA0BE,eAA1B,CAAjB;AACDe,IAAAA,OAAO,CAACC,GAAR,CAAa,aAAYC,QAAS,EAAlC;AAEC,UAAMZ,OAAO,GAAGG,IAAI,CAACW,KAAL,CAAWC,KAAX,CAAiB,EAAjB,CAAhB;AAEAL,IAAAA,OAAO,CAACC,GAAR,CAAa,aAAYX,OAAQ,EAAjC;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAa,QAAOlB,GAAI,EAAxB;AACAmB,IAAAA,QAAQ,CAACI,OAAT,CAAiBC,IAAjB,CAAsBV,aAAtB,EACCW,IADD,CACM;AACAC,MAAAA,IAAI,EAAEZ,aADN;AAEAa,MAAAA,GAAG,EAAE,IAFL;AAGAC,MAAAA,QAAQ,EAAE;AAHV,KADN,EAKGC,IALH,CAKQC,OAAO,IAAG;AAACb,MAAAA,OAAO,CAACC,GAAR,CAAYY,OAAZ;AAAqB,KALxC;;AAOH,QAAI,OAAOzB,MAAM,CAACC,QAAd,KAA2B,WAA/B,EAA4C;AAC1CA,MAAAA,QAAQ,CAACE,OAAT,CAAiB;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAjB;AACH,KAFC,MAEK;AACHsB,MAAAA,KAAK,CAAC,yBAAD,CAAL;AACH;;AAAA;AACA;AAEF;;AAOD,eAAe3B,aAAf","sourcesContent":["import Web3 from 'web3';\r\nimport { calculateTotal } from '../context/mainContext';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst { abi } = require('../build/contracts/Retailing.json');\r\nconst contractAddress = '0xa24cc613Ecd1be73B474b12EEb9592388e8509b2';\r\nconst reciever = '0x57102EB7596D54cE2C139C7b047024286ca8Ba54';\r\n\r\n\r\n\r\nasync function connectWallet() {\r\n\r\n    if (window.ethereum && window.ethereum.chainId == '0x61') {\r\n       window.ethereum.request({ method: \"eth_requestAccounts\" });\r\n       window.web3 = new Web3(window.ethereum);\r\n       const account = web3.eth.accounts;\r\n       const walletAddress = account.givenProvider.selectedAddress;\r\n       console.log(`Wallet: ${walletAddress}`);\r\n       const contract = new web3.eth.Contract(abi,contractAddress);\r\n      console.log(`Contract: ${contract}`);\r\n\r\n       const chainId = web3.utils.toHex(97);\r\n\r\n       console.log(`Chain ID: ${chainId}`);\r\n       console.log(`abi: ${abi}`);\r\n       contract.methods.paid(walletAddress)\r\n       .send({\r\n             from: walletAddress,\r\n             gas: 0x00,\r\n             gasPrice: 0x00\r\n       }).then(receipt=> {console.log(receipt)})\r\n       \r\n    if (typeof window.ethereum !== 'undefined') {\r\n      ethereum.request({ method: 'eth_requestAccounts' });\r\n  } else {\r\n      alert('Please install metamask')\r\n  };\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n  \r\n\r\n\r\nexport default connectWallet"]},"metadata":{},"sourceType":"module"}