{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\ecommerce-dapp\\\\components\\\\Metamask.js\",\n    _this = this;\n\nimport Web3 from 'web3';\nimport Head from 'next/head';\nimport ListItem from '../../components/ListItem';\nimport { titleIfy, slugify } from '../../utils/helpers';\nimport fetchCategories from '../../utils/categoryProvider';\nimport inventoryForCategory from '../../utils/inventoryForCategory';\nimport CartLink from '../../components/CartLink';\n\nvar _require = require('../build/contracts/Retailing.json'),\n    abi = _require.abi;\n\nvar contractAddress = '0xa24cc613Ecd1be73B474b12EEb9592388e8509b2';\nvar reciever = '0x57102EB7596D54cE2C139C7b047024286ca8Ba54';\n\n/*#__PURE__*/\n_jsxDEV(\"div\", {\n  className: \"\",\n  children: cart.map(function (item, index) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border-b py-10\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(Image, {\n          className: \"w-32 m-0\",\n          src: item.image,\n          alt: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"m-0 pl-10 text-gray-600\",\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-1 justify-end\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"m-0 pl-10 text-gray-900 font-semibold\",\n            children: DENOMINATION + item.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, _this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, _this);\n  })\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 22,\n  columnNumber: 1\n}, this);\n\nfunction connectWallet() {\n  return _connectWallet.apply(this, arguments);\n}\n\nfunction _connectWallet() {\n  _connectWallet = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var account, walletAddress, contract, chainId;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (window.ethereum && window.ethereum.chainId == '0x61') {\n              window.ethereum.request({\n                method: \"eth_requestAccounts\"\n              });\n              window.web3 = new Web3(window.ethereum);\n              account = web3.eth.accounts;\n              walletAddress = account.givenProvider.selectedAddress;\n              console.log(\"Wallet: \".concat(walletAddress));\n              contract = new web3.eth.Contract(abi, contractAddress);\n              chainId = web3.utils.toHex(97);\n              console.log(\"Chain ID: \".concat(chainId));\n              console.log(abi);\n              contract.methods.paid(walletAddress).send({\n                from: walletAddress,\n                gas: 0x00,\n                gasPrice: 0x00\n              }).then(function (receipt) {\n                console.log(receipt);\n              });\n\n              if (typeof window.ethereum !== 'undefined') {\n                ethereum.request({\n                  method: 'eth_requestAccounts'\n                });\n              } else {\n                alert('Please install metamask');\n              }\n\n              ;\n            }\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _connectWallet.apply(this, arguments);\n}\n\nexport default connectWallet;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/ecommerce-dapp/components/Metamask.js"],"names":["Web3","Head","ListItem","titleIfy","slugify","fetchCategories","inventoryForCategory","CartLink","require","abi","contractAddress","reciever","cart","map","item","index","image","name","DENOMINATION","price","connectWallet","window","ethereum","chainId","request","method","web3","account","eth","accounts","walletAddress","givenProvider","selectedAddress","console","log","contract","Contract","utils","toHex","methods","paid","send","from","gas","gasPrice","then","receipt","alert"],"mappings":"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","sourcesContent":["import Web3 from 'web3';\r\n\r\n\r\nimport Head from 'next/head'\r\nimport ListItem from '../../components/ListItem'\r\nimport { titleIfy, slugify } from '../../utils/helpers'\r\nimport fetchCategories from '../../utils/categoryProvider'\r\nimport inventoryForCategory from '../../utils/inventoryForCategory'\r\nimport CartLink from '../../components/CartLink'\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst { abi } = require('../build/contracts/Retailing.json');\r\nconst contractAddress = '0xa24cc613Ecd1be73B474b12EEb9592388e8509b2';\r\nconst reciever = '0x57102EB7596D54cE2C139C7b047024286ca8Ba54';\r\n\r\n\r\n<div className=\"\">\r\n  {cart.map((item, index) => {\r\n    return (\r\n      <div className=\"border-b py-10\" key={index}>\r\n        <div className=\"flex items-center\">\r\n          <Image\r\n            className=\"w-32 m-0\"\r\n            src={item.image}\r\n            alt={item.name}\r\n          />\r\n          <p className=\"m-0 pl-10 text-gray-600\">\r\n            {item.name}\r\n          </p>\r\n          <div className=\"flex flex-1 justify-end\">\r\n            <p className=\"m-0 pl-10 text-gray-900 font-semibold\">\r\n              {DENOMINATION + item.price}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  })}\r\n</div>\r\nasync function connectWallet() {\r\n\r\n    if (window.ethereum && window.ethereum.chainId == '0x61') {\r\n       window.ethereum.request({ method: \"eth_requestAccounts\" });\r\n       window.web3 = new Web3(window.ethereum);\r\n       const account = web3.eth.accounts;\r\n       const walletAddress = account.givenProvider.selectedAddress;\r\n       console.log(`Wallet: ${walletAddress}`);\r\n       const contract = new web3.eth.Contract(abi,contractAddress);\r\n       const chainId = web3.utils.toHex(97);\r\n       console.log(`Chain ID: ${chainId}`);\r\n       console.log(abi)\r\n       contract.methods.paid(walletAddress)\r\n       .send({\r\n             from: walletAddress,\r\n             gas: 0x00,\r\n             gasPrice: 0x00\r\n       }).then(receipt=> {console.log(receipt)})\r\n       \r\n    if (typeof window.ethereum !== 'undefined') {\r\n      ethereum.request({ method: 'eth_requestAccounts' });\r\n  } else {\r\n      alert('Please install metamask')\r\n  };\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n  \r\n\r\n\r\nexport default connectWallet"]},"metadata":{},"sourceType":"module"}