{"ast":null,"code":"// import Web3 from 'web3';\n// const toAddress = '0x57102EB7596D54cE2C139C7b047024286ca8Ba54';\n// const txData = {\n//     \"nonce\": 1,\n//     \"gasLimit\": \"0x2fd618\",\n//     \"gasPrice\": \"0x4a817c800\",\n//     \"value\": \"0x0\",\n//     data, // containing info that you want to `transfer()` to the `receiver`\n//     from: fromAddress, // send transaction from your address\n//     to: toAddress // CHANGED; send transaction to the contract address\n// };\n// function tx(){\n//     if (window.ethereum && window.ethereum.chainId == '0') {\n//         window.ethereum.request({ method: \"eth_requestAccounts\" });\n//                 window.web3 = new Web3(window.ethereum);\n//                 const account = web3.eth.accounts;\n//                 const fromAddress = account.givenProvider.selectedAddress;\n//                 var Tx = require(\"ethereumjs-tx\").Transaction\n//                 var amount = web3.utils.toHex(1e16)\n//                 web3.eth.getTransactionCount(fromAddress).then(function(v){console.log(v);})  \n//                 // set your private key here, we'll sign the transaction below\n//                 var privateKey = \"77dc2BE0B2463F8E049502330d5C9791\"  \n//                 const privateKeyBuffer = Buffer.from(privateKey, 'hex')\n//                 var contract = new web3.eth.Contract(abi, tokenContractAddress, {from: fromAddress})\n//                 const transaction = new Tx.Transaction(txData)\n//                 transaction.sign(privateKeyBuffer)\n//                 web3.eth.sendSignedTransaction('0x' + transaction.serialize().toString('hex'))\n//     }\n// }\n// export default tx","map":{"version":3,"sources":["C:/Users/Admin/Desktop/ecommerce-dapp/components/transaction.js"],"names":[],"mappings":"AAAA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import Web3 from 'web3';\r\n\r\n\r\n\r\n// const toAddress = '0x57102EB7596D54cE2C139C7b047024286ca8Ba54';\r\n\r\n// const txData = {\r\n//     \"nonce\": 1,\r\n//     \"gasLimit\": \"0x2fd618\",\r\n//     \"gasPrice\": \"0x4a817c800\",\r\n//     \"value\": \"0x0\",\r\n//     data, // containing info that you want to `transfer()` to the `receiver`\r\n//     from: fromAddress, // send transaction from your address\r\n//     to: toAddress // CHANGED; send transaction to the contract address\r\n// };\r\n// function tx(){\r\n//     if (window.ethereum && window.ethereum.chainId == '0') {\r\n//         window.ethereum.request({ method: \"eth_requestAccounts\" });\r\n//                 window.web3 = new Web3(window.ethereum);\r\n//                 const account = web3.eth.accounts;\r\n//                 const fromAddress = account.givenProvider.selectedAddress;\r\n//                 var Tx = require(\"ethereumjs-tx\").Transaction\r\n//                 var amount = web3.utils.toHex(1e16)\r\n//                 web3.eth.getTransactionCount(fromAddress).then(function(v){console.log(v);})  \r\n//                 // set your private key here, we'll sign the transaction below\r\n//                 var privateKey = \"77dc2BE0B2463F8E049502330d5C9791\"  \r\n//                 const privateKeyBuffer = Buffer.from(privateKey, 'hex')\r\n//                 var contract = new web3.eth.Contract(abi, tokenContractAddress, {from: fromAddress})\r\n\r\n//                 const transaction = new Tx.Transaction(txData)\r\n//                 transaction.sign(privateKeyBuffer)\r\n//                 web3.eth.sendSignedTransaction('0x' + transaction.serialize().toString('hex'))\r\n//     }\r\n// }\r\n\r\n// export default tx"]},"metadata":{},"sourceType":"script"}